---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import SocialShare from "../../components/SocialShare.astro";
import LogoMark from "../../components/LogoMark.astro";

export async function getStaticPaths() {
  const collections = await Promise.all([
    getCollection("articles"),
    getCollection("research"),
    getCollection("guides"),
    getCollection("concepts"),
  ]);
  const posts = collections.flat();
  return posts.map((post) => ({
    params: {
      category: post.collection,
      slug: post.slug,
    },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get all posts from the same category
const categoryPosts = await getCollection(post.collection);

// Sort posts by category_order first, then by date
categoryPosts.sort((a, b) => {
  // First compare by category_order
  const orderDiff = (a.data.category_order || 0) - (b.data.category_order || 0);
  if (orderDiff !== 0) return orderDiff;

  // If category_order is the same, sort by date (newest first)
  return b.data.pubDate.getTime() - a.data.pubDate.getTime();
});
---

<Layout
  title={post.data.title}
  social_card_url={post.data.social_card_url}
  description={post.data.description}
>
  <main
    class="mx-auto my-12 md:my-16 xl:my-24 max-w-3xl lg:max-w-7xl px-4 sm:px-8 md:px-12"
  >
    <div class="flex gap-8">
      <div class="hidden lg:block w-48 shrink-0">
        <div class="sticky top-4 text-text-muted pt-16">
          <h2
            class="mb-3 -ml-4 p-4 py-2 font-mono uppercase text-sm tracking-wider"
          >
            {
              post.data.category.charAt(0).toUpperCase() +
                post.data.category.slice(1)
            }
          </h2>
          <ul class="space-y-3">
            {
              categoryPosts.map((categoryPost) => (
                <li>
                  <a
                    href={`/${post.data.category}/${categoryPost.slug}`}
                    class:list={[
                      "block text-base leading-snug text-pretty",
                      post.slug === categoryPost.slug
                        ? "font-semibold underline-accent text-text-dark"
                        : "hover:text-accent transition-colors",
                    ]}
                  >
                    {categoryPost.data.sidebar_label || categoryPost.data.title}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
      <div class="flex-1 min-w-0">
        <div class="lg:hidden mb-16">
          <select
            class="w-full px-3 py-2 rounded-md bg-white border border-accent/15 appearance-none focus:ring-accent focus:border-accent"
            onchange="window.location.href=this.value"
          >
            {
              categoryPosts.map((categoryPost) => (
                <option
                  value={`/${post.data.category}/${categoryPost.slug}`}
                  selected={post.slug === categoryPost.slug}
                >
                  {categoryPost.data.sidebar_label || categoryPost.data.title}
                </option>
              ))
            }
          </select>
        </div>
        <h1
          class="text-3xl sm:text-4xl md:text-5xl font-bold mb-8 mt-4 max-w-2xl tracking-tight text-balance !leading-[1.2]"
        >
          {post.data.title}
        </h1>
        <article>
          {
            (post.data.category === "articles" ||
              post.data.category === "research") && (
              <div class="mb-8 pb-4 md:text-lg">
                <span class="font-semibold">{post.data.author}</span>
                {post.data.authorTitle && (
                  <>
                    {" "}
                    <LogoMark
                      size="8"
                  className="inline-block mx-1 relative -top-[1px] text-text-muted"
                /><span class="ml-2">{post.data.authorTitle}</span>
                  </>
                )}
                <LogoMark
                  size="8"
                  className="inline-block mx-1 relative -top-[1px] text-text-muted"
                />{" "}
                {""}
                <span class="text-text-muted">
                  {new Intl.DateTimeFormat('en-US', {
                    timeZone: 'UTC',//utc
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  }).format(post.data.pubDate)}
                </span>
              </div>
            )
          }
          <div
            class="prose md:prose-lg
            prose-headings:text-text-dark prose-headings:font-semibold prose-headings:text-balance
            prose-p:text-text-dark
            prose-a:text-accent-dark prose-a:font-medium prose-a:underline prose-a:underline-offset-[3px] prose-a:decoration-accent hover:prose-a:text-accent
            prose-strong:text-text-dark prose-strong:font-semibold
            prose-ul:list-disc prose-ul:pl-6
            prose-ol:list-decimal prose-ol:pl-6
            marker:text-text-muted
            prose-li:text-text-dark prose-li:my-1
            prose-hr:border-text-muted/10
            prose-blockquote:border-l-4 prose-blockquote:border-accent/30 prose-blockquote:pl-4 prose-blockquote:italic
            prose-code:text-text-dark prose-code:bg-accent/10 prose-code:px-1 prose-code:py-0.5 prose-code:rounded-sm prose-code:before:hidden prose-code:after:hidden prose-code:font-medium
            prose-pre:bg-white prose-pre:text-text-dark prose-pre:p-4 prose-pre:rounded-lg
            prose-img:max-w-full prose-img:h-auto prose-img:object-contain
            prose-figcaption:w-full prose-figcaption:text-text-muted prose-figcaption:text-center
            prose-figcaption:font-mono prose-figcaption:text-sm"
          >
            <Content />
          </div>
          <SocialShare
            title={post.data.title}
            url={`https://agentexperience.ax/${post.data.category}/${post.slug}`}
          />
        </article>
      </div>
    </div>
  </main>
</Layout>

<style is:global>
  .prose
    :where(.prose > :first-child):is(p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    @apply font-medium text-xl md:text-[22px] leading-relaxed mb-10;
  }

  .prose figure {
    @apply flex flex-col items-center xl:-mx-36;
  }

  .prose h3 img {
    margin-top: 5rem;
    margin-bottom: 0.5rem;
  }

  select:not([size]) {
    print-color-adjust: exact;
    background-image: url("data:image/svg+xml,%3csvg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 10 6'%3e %3cpath stroke='%232036A1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 1 4 4 4-4'/%3e %3c/svg%3e");
    background-position: right 0.75rem center;
    background-repeat: no-repeat;
    background-size: 0.75em 0.75em;
    padding-right: 2.5rem;
  }
</style>
