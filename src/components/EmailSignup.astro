<div>
  <form id="email-signup-form" class="space-y-2">
    <p class="text-sm">Get updates about new developments in AX.</p>

    <div class="flex flex-col sm:flex-row gap-2">
      <input
        type="email"
        placeholder="Email address"
        required
        class="bg-white border border-accent/20 rounded-md px-3 py-2 text-sm text-text-dark placeholder-text-muted/70 focus:outline-none focus:ring-2 focus:ring-accent flex-grow"
      />
      <button
        type="submit"
        id="submit-button"
        class="relative bg-accent text-white rounded-md px-4 py-2 text-sm font-medium hover:bg-accent-dark transition-colors overflow-hidden"
      >
        <span id="email-signup-btn" class="transition-opacity">Subscribe</span>
        <span
          id="email-signup-check-icon"
          class="absolute inset-0 flex items-center justify-center opacity-0 transition-opacity"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
              clip-rule="evenodd"></path>
          </svg>
        </span>
      </button>
    </div>
  </form>
</div>

<script>
  // Email signup form handling
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById(
      "email-signup-form",
    ) as HTMLFormElement;
    const buttonText = document.getElementById("email-signup-btn");
    const checkIcon = document.getElementById("email-signup-check-icon");

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        if (buttonText && checkIcon) {
          buttonText.style.opacity = "0";
        }

        const formData = new FormData(form);

        fetch("/", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: new URLSearchParams(formData).toString(),
        })
          .then(() => {
            setTimeout(() => {
              checkIcon.style.opacity = "1";

              // Reset after 3 seconds
              setTimeout(() => {
                buttonText.style.opacity = "1";
                checkIcon.style.opacity = "0";
                form.reset();
              }, 3000);
            }, 200);
          })
          .catch((error) => alert(error));
      });
    }
  });
</script>
